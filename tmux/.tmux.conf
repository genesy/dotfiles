# tmux display things in 256 colors
# set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"
# set -as terminal-overrides ',*:Tc'

# Status bar inherits terminal background/foreground
set -g status-bg default
set -g status-fg default

# Pane borders inherit terminal colors
set -g pane-border-bg default
set -g pane-border-fg default
set -g pane-active-border-bg default
set -g pane-active-border-fg default

# Message text inherits terminal colors
set -g message-style bg=default,fg=default
set -g message-command-style bg=default,fg=default

# Window status line inherits terminal colors
set -g window-status-style bg=default,fg=default
set -g window-status-current-style bg=default,fg=default

# set -g status-utf8 on
set-option -g default-shell /bin/zsh
set -g history-limit 20000

# automatically renumber tmux windows
set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Activity Monitoring
setw -g monitor-activity off
setw -g visual-activity off

# Allow pass through because of image.nvim
set -g allow-passthrough on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# tile all windows
# unbind =
# bind = select-layout tiled

# cycle through panes
# unbind C-a
# unbind o # this is the default key for cycling panes
# bind ^A select-pane -t:.+
#

set -g status-keys vi
set -g status-bg default
set -g status-fg default
set -g pane-border-bg default
set -g pane-active-border-bg default

setw -g mode-keys vi
set -g mode-style bg=default,fg=default

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
# set-window-option -g automatic-rename on

######################
#### Key Bindings ####
######################

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# quickly open a new window
bind N new-window

# split window and fix path for tmux 1.9
 bind-key \\ split-window -h -c "#{pane_current_path}"
 bind-key - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
# bind y setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

bind-key Escape copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T choice-mode-vi h send-keys -X tree-collapse
bind-key -T choice-mode-vi l send-keys -X tree-expand
bind-key -T choice-mode-vi H send-keys -X tree-collapse-all
bind-key -T choice-mode-vi L send-keys -X tree-expand-all
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+



# bind-key -T copy-mode-vi y send-keys -X copy-pipe\;clear-selection

# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy -in -selection clipboard"
# bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy -in -selection clipboard"

# enable mouse support for switching panes/windows
setw -g mouse on
# set-option -g -q mouse on

# bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
# bind-key -t vi-copy PPage page-up
# bind-key -t vi-copy NPage page-down

bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"
# bind-key -t vi-copy WheelUpPane halfpage-up
# bind-key -t vi-copy WheelDownPane halfpage-down

# maximizing and restoring windows
unbind Up
bind Up new-window -d -n fullscreen \; swap-pane -s fullscreen.1 \; select-window -t fullscreen
unbind Down
bind Down last-window \; swap-pane -s fullscreen.1 \; kill-window -t fullscreen
bind-key Z resize-pane -Z
# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

# Buffers to/from Mac clipboard, yay tmux book from pragprog
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

##############################
### Color & Style Settings ###
##############################

source ~/dotfiles/tmux/theme.sh

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-H if-shell "$is_vim" "send-keys C-H" "select-pane -L"
bind -n C-J if-shell "$is_vim" "send-keys C-J" "select-pane -D"
bind -n C-K if-shell "$is_vim" "send-keys C-K" "select-pane -U"
bind -n C-L if-shell "$is_vim" "send-keys C-L" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-pain-control'

set -g @plugin 'tmux-plugins/tmux-sensible' 		# A set of tmux options that should be acceptable to everyone.
set -g @plugin 'tmux-plugins/tmux-resurrect' 		# Saves session
  set -g @resurrect-strategy-vim 'session'
  set -g @resurrect-strategy-nvim 'session'
# user <prefix> CTRL R/S to reload/save instead
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'mattdavis90/base16-tmux'
  set -g @colors-base16 'material-darker'

set -g @plugin 'NHDaly/tmux-scroll-copy-mode'           # Scroll up enables copy mode
  set -g @scroll-down-exit-copy-mode "on"
  set -g @scroll-in-moused-over-pane "on"
  set -g @scroll-without-changing-pane "on"

 set -g @plugin 'tmux-plugins/tmux-yank'
#   # needs reattach-to-user-namespace on osx
#   # brew install reattach-to-user-namespace
#   set-option -g default-command "reattach-to-user-namespace -l zsh"

# set-option -g allow-rename off # prevents renaming window


# set-option -g pane-active-border-fg blue

# TODO: figure this one out
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'
# run-shell ~/.tmux/plugins/tmux-sidebar/sidebar.tmux
